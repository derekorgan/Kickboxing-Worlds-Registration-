CREATE TABLE attendee (id BIGINT AUTO_INCREMENT, profile_id BIGINT NOT NULL, division_id BIGINT, type_id BIGINT NOT NULL, first_name VARCHAR(255) NOT NULL, last_name VARCHAR(255) NOT NULL, sex VARCHAR(6), club_name VARCHAR(255) NOT NULL, accomodation VARCHAR(45) NOT NULL, sharing_with1 VARCHAR(255), sharing_with2 VARCHAR(255), flight_datetime DATETIME, flight_time TIME, flight_number VARCHAR(45), visa TINYINT DEFAULT '0' NOT NULL, dob DATE, passport VARCHAR(255), expiry_date DATE, INDEX division_id_idx (division_id), INDEX type_id_idx (type_id), INDEX profile_id_idx (profile_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE discipline (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, sex VARCHAR(6) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE division (id BIGINT AUTO_INCREMENT, discipline_id BIGINT NOT NULL, category VARCHAR(255) NOT NULL, weight VARCHAR(255), status TINYINT DEFAULT '1' NOT NULL, INDEX discipline_id_idx (discipline_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE event (id BIGINT AUTO_INCREMENT, name VARCHAR(255), description text, starts DATE, ends DATE, register_by DATE, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE event_discipline (event_id BIGINT, discipline_id BIGINT, PRIMARY KEY(event_id, discipline_id)) ENGINE = INNODB;
CREATE TABLE profile (id BIGINT AUTO_INCREMENT, event_id BIGINT NOT NULL, sf_guard_user_id BIGINT NOT NULL, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255), country VARCHAR(255), INDEX event_id_idx (event_id), INDEX sf_guard_user_id_idx (sf_guard_user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE type (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL UNIQUE, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE attendee ADD CONSTRAINT attendee_type_id_type_id FOREIGN KEY (type_id) REFERENCES type(id);
ALTER TABLE attendee ADD CONSTRAINT attendee_profile_id_profile_id FOREIGN KEY (profile_id) REFERENCES profile(id);
ALTER TABLE attendee ADD CONSTRAINT attendee_division_id_division_id FOREIGN KEY (division_id) REFERENCES division(id);
ALTER TABLE division ADD CONSTRAINT division_discipline_id_discipline_id FOREIGN KEY (discipline_id) REFERENCES discipline(id);
ALTER TABLE event_discipline ADD CONSTRAINT event_discipline_event_id_event_id FOREIGN KEY (event_id) REFERENCES event(id);
ALTER TABLE event_discipline ADD CONSTRAINT event_discipline_discipline_id_discipline_id FOREIGN KEY (discipline_id) REFERENCES discipline(id);
ALTER TABLE profile ADD CONSTRAINT profile_sf_guard_user_id_sf_guard_user_id FOREIGN KEY (sf_guard_user_id) REFERENCES sf_guard_user(id);
ALTER TABLE profile ADD CONSTRAINT profile_event_id_event_id FOREIGN KEY (event_id) REFERENCES event(id);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
