<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Attendee', 'doctrine');

/**
 * BaseAttendee
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $team_administrator_id
 * @property integer $division_id
 * @property integer $type_id
 * @property string $first_name
 * @property string $last_name
 * @property string $accomodation
 * @property string $sharing_with
 * @property timestamp $flight_datetime
 * @property string $flight_number
 * @property TeamAdministrator $TeamAdministrator
 * @property Division $Division
 * @property Type $Type
 * 
 * @method integer           getId()                    Returns the current record's "id" value
 * @method integer           getTeamAdministratorId()   Returns the current record's "team_administrator_id" value
 * @method integer           getDivisionId()            Returns the current record's "division_id" value
 * @method integer           getTypeId()                Returns the current record's "type_id" value
 * @method string            getFirstName()             Returns the current record's "first_name" value
 * @method string            getLastName()              Returns the current record's "last_name" value
 * @method string            getAccomodation()          Returns the current record's "accomodation" value
 * @method string            getSharingWith()           Returns the current record's "sharing_with" value
 * @method timestamp         getFlightDatetime()        Returns the current record's "flight_datetime" value
 * @method string            getFlightNumber()          Returns the current record's "flight_number" value
 * @method TeamAdministrator getTeamAdministrator()     Returns the current record's "TeamAdministrator" value
 * @method Division          getDivision()              Returns the current record's "Division" value
 * @method Type              getType()                  Returns the current record's "Type" value
 * @method Attendee          setId()                    Sets the current record's "id" value
 * @method Attendee          setTeamAdministratorId()   Sets the current record's "team_administrator_id" value
 * @method Attendee          setDivisionId()            Sets the current record's "division_id" value
 * @method Attendee          setTypeId()                Sets the current record's "type_id" value
 * @method Attendee          setFirstName()             Sets the current record's "first_name" value
 * @method Attendee          setLastName()              Sets the current record's "last_name" value
 * @method Attendee          setAccomodation()          Sets the current record's "accomodation" value
 * @method Attendee          setSharingWith()           Sets the current record's "sharing_with" value
 * @method Attendee          setFlightDatetime()        Sets the current record's "flight_datetime" value
 * @method Attendee          setFlightNumber()          Sets the current record's "flight_number" value
 * @method Attendee          setTeamAdministrator()     Sets the current record's "TeamAdministrator" value
 * @method Attendee          setDivision()              Sets the current record's "Division" value
 * @method Attendee          setType()                  Sets the current record's "Type" value
 * 
 * @package    registration
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAttendee extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('attendee');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('team_administrator_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('division_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('type_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('first_name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('last_name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('accomodation', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('sharing_with', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('flight_datetime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('flight_number', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TeamAdministrator', array(
             'local' => 'team_administrator_id',
             'foreign' => 'id'));

        $this->hasOne('Division', array(
             'local' => 'division_id',
             'foreign' => 'id'));

        $this->hasOne('Type', array(
             'local' => 'type_id',
             'foreign' => 'id'));
    }
}